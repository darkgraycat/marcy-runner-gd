[gd_resource type="VisualShader" load_steps=11 format=3 uid="uid://ds5tetjhjj8jl"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_5lmhu"]
parameter_name = "ColorParameter"
default_value_enabled = true

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_3aloc"]
parameter_name = "Inverse"
default_value_enabled = true

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_xdqyi"]
default_input_values = [0, false, 1, Quaternion(1, 1, 1, 1), 2, Quaternion(0, 0, 0, 0)]
op_type = 5

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_5lmhu"]
input_name = "color"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_5lmhu"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 0)]
operator = 2

[sub_resource type="VisualShaderNodeVectorLen" id="VisualShaderNodeVectorLen_3aloc"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_xdqyi"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 0)]
operator = 2

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_3atfj"]
default_input_values = [0, 0.4, 1, 0.0]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_5lmhu"]
function = 31

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_3aloc"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 0)]
operator = 2

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform bool Inverse = false;
uniform vec4 ColorParameter : source_color = vec4(1.000000, 1.000000, 1.000000, 1.000000);



void fragment() {
// BooleanParameter:11
	bool n_out11p0 = Inverse;


// Input:2
	vec4 n_out2p0 = COLOR;


// VectorOp:3
	vec3 n_in3p1 = vec3(1.00000, 1.00000, 0.00000);
	vec3 n_out3p0 = vec3(n_out2p0.xyz) * n_in3p1;


// VectorLen:4
	float n_out4p0 = length(n_out3p0);


// Step:6
	float n_in6p0 = 0.40000;
	float n_out6p0 = step(n_in6p0, n_out4p0);


// FloatFunc:7
	float n_out7p0 = 1.0 - n_out6p0;


// ColorParameter:10
	vec4 n_out10p0 = ColorParameter;


// VectorOp:8
	vec3 n_out8p0 = vec3(n_out7p0) * vec3(n_out10p0.xyz);


// VectorOp:5
	vec3 n_out5p0 = vec3(n_out6p0) * vec3(n_out10p0.xyz);


	vec4 n_out12p0;
// Switch:12
	n_out12p0 = mix(vec4(n_out5p0, 0.0), vec4(n_out8p0, 0.0), float(n_out11p0));


// Output:0
	COLOR.rgb = vec3(n_out12p0.xyz);


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(3380, 700)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_5lmhu")
nodes/fragment/2/position = Vector2(-320, 500)
nodes/fragment/3/node = SubResource("VisualShaderNodeVectorOp_5lmhu")
nodes/fragment/3/position = Vector2(140, 40)
nodes/fragment/4/node = SubResource("VisualShaderNodeVectorLen_3aloc")
nodes/fragment/4/position = Vector2(660, 60)
nodes/fragment/5/node = SubResource("VisualShaderNodeVectorOp_xdqyi")
nodes/fragment/5/position = Vector2(1780, 100)
nodes/fragment/6/node = SubResource("VisualShaderNodeStep_3atfj")
nodes/fragment/6/position = Vector2(1120, 60)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatFunc_5lmhu")
nodes/fragment/7/position = Vector2(1240, 560)
nodes/fragment/8/node = SubResource("VisualShaderNodeVectorOp_3aloc")
nodes/fragment/8/position = Vector2(1800, 600)
nodes/fragment/10/node = SubResource("VisualShaderNodeColorParameter_5lmhu")
nodes/fragment/10/position = Vector2(740, 920)
nodes/fragment/11/node = SubResource("VisualShaderNodeBooleanParameter_3aloc")
nodes/fragment/11/position = Vector2(2260, -180)
nodes/fragment/12/node = SubResource("VisualShaderNodeSwitch_xdqyi")
nodes/fragment/12/position = Vector2(2600, 260)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 0, 3, 0, 4, 0, 4, 0, 6, 1, 6, 0, 7, 0, 6, 0, 5, 0, 7, 0, 8, 0, 10, 0, 8, 1, 10, 0, 5, 1, 11, 0, 12, 0, 8, 0, 12, 1, 5, 0, 12, 2, 12, 0, 0, 0)
